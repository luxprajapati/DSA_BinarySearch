class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        //Use Binary Search
        int start = 0;
        int end = nums.size()-1;
        int fpos=-1;
        int lpos=-1;
        while(start <= end)
        {
            int mid=start +(end -start)/2;
            if(nums[mid]==target)
            {
                fpos=mid;
                end=mid-1;   
            }
            else if(nums[mid]<target)
            {
                start =mid+1;   
            }
            else
            {
                end =mid-1;
            }   
        }
        //Int Last Position
        start = 0;
        end = nums.size()-1;
        
         while(start <= end)
        {
            int mid=(start)+(end-start)/2;
            
            if(nums[mid]<=target)
            {
                if(nums[mid]==target)
                    lpos=mid;
                    start=mid+1;   
            }
            else
            {
                end =mid-1;
            }   
        }
        return {fpos,lpos};
    }
};
